// ============================================================================
// This is auto-generated by gf cli tool only once. Fill this file as you wish.
// ============================================================================

package configs

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
)

type AddReqEntity struct {
	Name  string `p:"name" v:"required#请填写配置名称"`
	Key   string `p:"key" v:"required#请填写配置标示"`
	Value string `p:"value" v:"required#请填写配置的值"`
}

// List 获取全部配置
func List() gdb.Result {
	res, err := g.DB().Table(Table).All()
	if err != nil {
		g.Log().Error(err.Error())
	}
	return res
}

// Add 添加文章
func Add(data *AddReqEntity) (insId int64) {
	entity := &Entity{}
	entity.Name = data.Name
	entity.Key = data.Key
	entity.Value = data.Value
	res, err := entity.Insert()
	if err != nil {
		g.Log().Error(err)
		return 0
	}
	insId, err = res.LastInsertId()
	if err != nil {
		g.Log().Error(err)
		return 0
	}
	return insId
}

// Edit 编辑栏目
func Edit(id int, data *AddReqEntity) (rows int64) {
	entity, _ := Model.FindOne("id", id)
	entity.Name = data.Name
	entity.Key = data.Key
	entity.Value = data.Value
	res, err := Model.Replace(entity)
	if err != nil {
		g.Log().Error(err)
		return 0
	}
	rows, err = res.RowsAffected()
	if err != nil {
		g.Log().Error(err)
		return 0
	}
	return rows
}

// Del 删除栏目
func Del(id int) (rows int64) {
	res, err := g.DB().Table(Table).Where("id", id).Delete()
	if err != nil {
		g.Log().Error(err)
		return 0
	}
	rows, err = res.RowsAffected()
	if err != nil {
		g.Log().Error(err)
		return 0
	}
	return rows
}
